{"version":3,"file":"static/js/930.11f8d5a5.chunk.js","mappings":"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","sources":["components/Circle/Circle.jsx","helpers/checkColor.js","components/SourceBar/SourceBar.Styled.jsx","components/SourceBar/SourceBar.jsx","pages/StatisticPage/StatisticPage.jsx"],"sourcesContent":["import { PieChart } from 'react-minimal-pie-chart';\nimport { useEffect, useState } from 'react';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { useUserContext } from '../../userContext/userContext';\n\nexport const Circle = () => {\n  const [status, setStatus] = useState({\n    send: 0,\n    rejected: 0,\n    considered: 0,\n    call: 0,\n    interview: 0,\n    test: 0,\n    offer: 0,\n  });\n  const [statusLength, setStatusLength] = useState(0);\n  const { user } = useUserContext();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, user.id));\n        const notes = [];\n        querySnapshot.forEach(doc => notes.push(doc.data()));\n        setStatus({\n          send: notes.filter(note => note.status === 'Надіслано').length,\n          rejected: notes.filter(note => note.status === 'Відхилено').length,\n          considered: notes.filter(note => note.status === 'Розглядається')\n            .length,\n          call: notes.filter(note => note.status === 'Дзвінок рекрутера')\n            .length,\n          interview: notes.filter(note => note.status === \"Інтерв'ю\").length,\n          test: notes.filter(note => note.status === 'Тестове завдання').length,\n          offer: notes.filter(note => note.status === 'Прийнято').length,\n        });\n        setStatusLength(notes.length);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (user) {\n      fetchData();\n    }\n  }, [user]);\n\n  const data = [\n    { title: 'Надіслано', value: status.send, color: '#8a9ab5' },\n    { title: 'Відхилено', value: status.rejected, color: '#b84956' },\n    { title: 'Розглядається', value: status.considered, color: '#6a92d4' },\n    { title: 'Дзвінок рекрутера', value: status.call, color: '#d5db25' },\n    { title: \"Інтерв'ю\", value: status.interview, color: '#eba946' },\n    { title: 'Тестове завдання', value: status.test, color: '#84f59e' },\n    { title: 'Прийнято', value: status.offer, color: '#56b858' },\n  ];\n\n  return (\n    <>\n      <PieChart\n        data={data}\n        background=\"transparent\"\n        radius={60}\n        lineWidth=\"5\"\n        label={({ dataEntry }) => Math.round(dataEntry.percentage) + '% '}\n        labelStyle={{\n          fontSize: '10px',\n          fill: '#ffffff',\n        }}\n        labelPosition={80}\n        viewBoxSize={[150, 150]}\n        center={[75, 75]}\n      />\n      <ul>\n        <li>\n          <span style={{ background: 'transparent' }}></span>\n          <span>Всього відгуків {statusLength} шт.</span>\n        </li>\n        <li>\n          <span style={{ background: '#8a9ab5' }}></span>\n          <span>Надіслано {status.send} шт.</span>\n        </li>\n        <li>\n          <span style={{ background: '#b84956' }}></span>\n          <span>Відхилено {status.rejected} шт.</span>\n        </li>\n        <li>\n          <span style={{ background: '#6a92d4' }}></span>\n          <span>Розглядається {status.considered} шт.</span>\n        </li>\n        <li>\n          <span style={{ background: '#d5db25' }}></span>\n          <span>Дзвінок рекрутера {status.call} шт.</span>\n        </li>\n        <li>\n          <span style={{ background: '#eba946' }}></span>\n          <span>Інтерв'ю {status.interview} шт.</span>\n        </li>\n        <li>\n          <span style={{ background: '#84f59e' }}></span>\n          <span>Тестове завдання {status.test} шт.</span>\n        </li>\n        <li>\n          <span style={{ background: '#56b858' }}></span>\n          <span>Прийнято {status.offer} шт.</span>\n        </li>\n      </ul>\n    </>\n  );\n};\n","export const checkColor = status => {\n  if (status === 'Прийнято') {\n    return '#56b858';\n  } else if (status === 'Відхилено') {\n    return '#b84956';\n  } else if (status === 'Розглядається') {\n    return '#6a92d4';\n  } else if (status === 'Дзвінок рекрутера') {\n    return '#d5db25';\n  } else if (status === \"Інтерв'ю\") {\n    return '#eba946';\n  } else if (status === 'Тестове завдання') {\n    return '#84f59e';\n  } else {\n    return '#8a9ab5';\n  }\n};\n","import styled from 'styled-components';\n\nexport const BarSection = styled.section`\n  font-size: 20px;\n\n  form {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    flex-wrap: wrap;\n    margin: 10px auto;\n  }\n`;\n","import {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { BarSection } from './SourceBar.Styled';\nimport { useEffect, useState } from 'react';\nimport { checkColor } from '../../helpers';\nimport PropTypes from 'prop-types';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const SourceBar = ({ notes }) => {\n  const [status, setStatus] = useState('Усі');\n  const [dataset, setDataset] = useState({});\n\n  useEffect(() => {\n    if (status === 'Усі') {\n      setDataset(\n        notes.reduce((acc, note) => {\n          return {\n            ...acc,\n            [note.source]: acc[note.source] > 0 ? acc[note.source] + 1 : 1,\n          };\n        }, {})\n      );\n    } else {\n      setDataset(\n        notes\n          .filter(note => note.status === status)\n          .reduce((acc, note) => {\n            return {\n              ...acc,\n              [note.source]: acc[note.source] > 0 ? acc[note.source] + 1 : 1,\n            };\n          }, {})\n      );\n    }\n  }, [notes, status]);\n\n  const options = {\n    responsive: true,\n    color: '#ffffff',\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Статистика джерел',\n        color: '#ffffff',\n      },\n    },\n    scales: {\n      yAxes: {\n        ticks: {\n          beginAtZero: true,\n          color: '#ffffff',\n          fontSize: 16,\n        },\n      },\n      xAxes: {\n        ticks: {\n          beginAtZero: true,\n          color: '#ffffff',\n          fontSize: 16,\n        },\n      },\n    },\n  };\n\n  const labels = [\n    'Linkedin',\n    'Djinni',\n    'jobs.dou.ua',\n    'work.ua',\n    'rabota.ua',\n    'ua.jooble.org',\n    'grc.ua',\n    'recruitica.com',\n    'other',\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: status,\n        data: dataset,\n        backgroundColor: checkColor(status),\n      },\n    ],\n  };\n\n  const onChange = e => {\n    setStatus(e.target.defaultValue);\n  };\n\n  return (\n    <BarSection>\n      <form onChange={onChange}>\n        <label>\n          Усі\n          <input type=\"radio\" value=\"Усі\" name=\"status\" defaultChecked></input>\n        </label>\n        <label>\n          Надіслано\n          <input type=\"radio\" value=\"Надіслано\" name=\"status\"></input>\n        </label>\n        <label>\n          Відхилено\n          <input type=\"radio\" value=\"Відхилено\" name=\"status\"></input>\n        </label>\n        <label>\n          Розглядається\n          <input type=\"radio\" value=\"Розглядається\" name=\"status\"></input>\n        </label>\n        <label>\n          Дзвінок рекрутера\n          <input type=\"radio\" value=\"Дзвінок рекрутера\" name=\"status\"></input>\n        </label>\n        <label>\n          Інтерв'ю\n          <input type=\"radio\" value=\"Інтерв'ю\" name=\"status\"></input>\n        </label>\n        <label>\n          Тестове завдання\n          <input type=\"radio\" value=\"Тестове завдання\" name=\"status\"></input>\n        </label>\n        <label>\n          Прийнято\n          <input type=\"radio\" value=\"Прийнято\" name=\"status\"></input>\n        </label>\n      </form>\n      <Bar options={options} data={data} />\n    </BarSection>\n  );\n};\n\nSourceBar.propTypes = {\n  notes: PropTypes.array,\n};\n","import { useEffect, useState } from 'react';\nimport { useUserContext } from '../../userContext/userContext';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { SourceBar } from '../../components/SourceBar/SourceBar';\nimport { Circle } from '../../components/Circle/Circle';\nimport { Button } from '../../components/GlobalStyle/Button';\n\nexport const StatisticPage = () => {\n  const [notes, setNotes] = useState(null);\n  const [visibleChart, setVisibleChart] = useState('source');\n  const { user } = useUserContext();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, user.id));\n        const newNotes = [];\n        querySnapshot.forEach(doc => newNotes.push(doc.data()));\n        newNotes.sort((firstNote, secondNote) =>\n          secondNote.date.localeCompare(firstNote.date)\n        );\n        setNotes(newNotes);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (user) {\n      fetchData();\n    }\n  }, [user]);\n\n  const handleClick = e => {\n    setVisibleChart(e.target.attributes.data.value);\n  };\n\n  return (\n    <>\n      <ul>\n        <li>\n          <Button data=\"source\" onClick={handleClick}>\n            Статистика джерел\n          </Button>\n        </li>\n        <li>\n          <Button data=\"circle\" onClick={handleClick}>\n            Статистика відгуків\n          </Button>\n        </li>\n      </ul>\n      {notes && visibleChart === 'source' && <SourceBar notes={notes} />}\n      {notes && visibleChart === 'circle' && <Circle notes={notes} />}\n    </>\n  );\n};\n"],"names":["Circle","useState","send","rejected","considered","call","interview","test","offer","status","setStatus","statusLength","setStatusLength","user","useUserContext","useEffect","fetchData","getDocs","collection","db","id","querySnapshot","notes","forEach","doc","push","data","filter","note","length","console","log","title","value","color","PieChart","background","radius","lineWidth","label","dataEntry","Math","round","percentage","labelStyle","fontSize","fill","labelPosition","viewBoxSize","center","style","checkColor","BarSection","styled","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","SourceBar","dataset","setDataset","reduce","acc","source","labels","datasets","backgroundColor","onChange","e","target","defaultValue","type","name","defaultChecked","options","responsive","plugins","legend","position","display","text","scales","yAxes","ticks","beginAtZero","xAxes","StatisticPage","setNotes","visibleChart","setVisibleChart","newNotes","sort","firstNote","secondNote","date","localeCompare","handleClick","attributes","Button","onClick","C"],"sourceRoot":""}