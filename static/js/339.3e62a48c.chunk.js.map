{"version":3,"file":"static/js/339.3e62a48c.chunk.js","mappings":"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","sources":["components/NoteList/NoteList.styled.jsx","components/NoteList/NoteList.jsx","components/SortButtons/SortButtons.styled.jsx","components/SortButtons/SortButtons.jsx","components/Filter/Filter.Styled.jsx","components/Filter/Filter.jsx","pages/NoteListPage/NoteListPage.Styled.jsx","pages/NoteListPage/NoteListPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  margin: 0 auto;\n\n  li {\n    list-style: none;\n    padding: 5px;\n  }\n\n  a {\n    background: rgba(25, 1, 65, 0.3);\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    border-radius: 10px;\n    margin-bottom: 10px;\n\n    display: flex;\n    flex-direction: column;\n\n    @media (min-width: 660px) {\n      flex-direction: row;\n    }\n  }\n\n  div {\n    padding: 5px;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n\n    &:nth-child(n + 4) {\n      display: none;\n    }\n\n    @media (min-width: 660px) {\n      width: 16%;\n\n      &:nth-child(n + 4) {\n        display: flex;\n      }\n    }\n  }\n\n  P {\n    overflow: hidden;\n    word-break: break-word;\n    text-align: center;\n\n    &:first-child {\n      background: #47406f;\n    }\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { formatDate } from '../../helpers';\nimport { Ul } from './NoteList.styled';\nimport PropTypes from 'prop-types';\n\nexport const NoteList = ({ notes }) => {\n  const location = useLocation();\n\n  return (\n    <Ul>\n      {notes.map(note => {\n        return (\n          <li key={note.id}>\n            <Link to={`/notes/${note.id}`} state={{ from: location }}>\n              <div>\n                <p>Дата надсилання</p> <p>{formatDate(note.date)}</p>\n              </div>\n              <div>\n                <p>Позиція</p> <p>{note.position}</p>\n              </div>\n              <div>\n                <p>Компанія</p> <p>{note.company}</p>\n              </div>\n              <div>\n                <p>Джерело</p> <p>{note.source}</p>\n              </div>\n              <div>\n                <p>Опис</p> <p>{note.description}</p>\n              </div>\n              <div>\n                <p>Статус</p> <p>{note.status}</p>\n              </div>\n            </Link>\n          </li>\n        );\n      })}\n    </Ul>\n  );\n};\n\nNoteList.propTypes = {\n  notes: PropTypes.array,\n};\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  width: 163px;\n  height: 40px;\n  background: #47406f;\n  backdrop-filter: blur(15px);\n  border-radius: 5px;\n  padding: 5px;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  div {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  ul {\n    background: #47406f;\n    backdrop-filter: blur(15px);\n    border-radius: 5px;\n    padding: 5px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n    li {\n      &:nth-child(n + 4) {\n        display: none;\n      }\n\n      @media (min-width: 660px) {\n        &:nth-child(n + 4) {\n          display: flex;\n        }\n      }\n    }\n  }\n`;\n","import { SortIcon } from '../icons/icons';\nimport { Div } from './SortButtons.styled';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SortButtons = ({ handleSort }) => {\n  const [isOpenList, setIsOpenList] = useState(false);\n\n  const handleClick = e => {\n    const data = e.target.attributes.data.value;\n    handleSort(data);\n  };\n\n  const onClick = () => {\n    setIsOpenList(!isOpenList);\n  };\n\n  return (\n    <Div onClick={onClick}>\n      <div>\n        Сортувати &nbsp;\n        <SortIcon size=\"1em\" />\n      </div>\n\n      {isOpenList && (\n        <ul>\n          <li data=\"date\" onClick={handleClick}>\n            По даті\n          </li>\n          <li data=\"position\" onClick={handleClick}>\n            По позиції\n          </li>\n          <li data=\"company\" onClick={handleClick}>\n            По компанії\n          </li>\n          <li data=\"source\" onClick={handleClick}>\n            По джерелу\n          </li>\n          <li data=\"description\" onClick={handleClick}>\n            По опису\n          </li>\n          <li data=\"status\" onClick={handleClick}>\n            По статусу\n          </li>\n        </ul>\n      )}\n    </Div>\n  );\n};\n\nSortButtons.propTypes = {\n  handleSort: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  max-width: 163px;\n  height: 34px;\n  border: 1px solid #ffffff;\n  border-radius: 5px;\n  background: transparent;\n  color: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  &::placeholder {\n    color: #ffffff;\n    font-family: 'Oswald', sans-serif;\n    font-style: normal;\n  }\n`;\n","import { Input } from './Filter.Styled';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ onFilter }) => {\n  const handleChange = event => {\n    onFilter(event.currentTarget.value);\n  };\n\n  return <Input onChange={handleChange} placeholder=\"Пошук\"></Input>;\n};\n\nFilter.propTypes = {\n  onFilter: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 18px;\n  margin-bottom: 2px;\n`;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { NoteList } from '../../components/NoteList/NoteList';\nimport { StyledLink } from '../../components/GlobalStyle/Link.Styled';\nimport { SortButtons } from '../../components/SortButtons/SortButtons';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Div } from './NoteListPage.Styled';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { useUserContext } from '../../userContext/userContext';\n\nexport const NoteListPage = () => {\n  const [notes, setNotes] = useState(null);\n  const [filter, setFilter] = useState('');\n  const [sortType, setSortType] = useState({\n    date: true,\n    position: true,\n    company: true,\n    source: true,\n    description: true,\n    status: true,\n  });\n  const location = useLocation();\n  const { user } = useUserContext();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, user.id));\n        const newNotes = [];\n        querySnapshot.forEach(doc => newNotes.push(doc.data()));\n        newNotes.sort((firstNote, secondNote) =>\n          secondNote.date.localeCompare(firstNote.date)\n        );\n        setNotes(newNotes);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (user) {\n      fetchData();\n    }\n  }, [user]);\n\n  const handleSort = data => {\n    const sortedNotes = notes.sort((firstNote, secondNote) => {\n      if (sortType[data]) {\n        return firstNote[data].localeCompare(secondNote[data]);\n      }\n      return secondNote[data].localeCompare(firstNote[data]);\n    });\n\n    setNotes(sortedNotes);\n\n    setSortType(previousSortType => {\n      return { ...previousSortType, [data]: !sortType[data] };\n    });\n  };\n\n  const onFilter = query => {\n    setFilter(query.toLowerCase());\n  };\n\n  const filterNotes = () => {\n    try {\n      return notes.filter(note => {\n        return Object.values(note).join('').toLowerCase().includes(filter);\n      });\n    } catch {\n      return false;\n    }\n  };\n\n  return (\n    <>\n      <StyledLink to=\"create\" state={{ from: location }}>\n        Створити замітку\n      </StyledLink>\n      {notes?.length > 0 && (\n        <Div>\n          <SortButtons noteList={notes} handleSort={handleSort} />\n          <Filter onFilter={onFilter} />\n        </Div>\n      )}\n      {filterNotes() && <NoteList notes={filterNotes()} />}\n\n      <Outlet />\n    </>\n  );\n};\n"],"names":["Ul","styled","NoteList","notes","location","useLocation","map","note","to","id","state","from","formatDate","date","position","company","source","description","status","Div","SortButtons","handleSort","useState","isOpenList","setIsOpenList","handleClick","e","data","target","attributes","value","onClick","size","Input","Filter","onFilter","onChange","event","currentTarget","placeholder","NoteListPage","setNotes","filter","setFilter","sortType","setSortType","user","useUserContext","useEffect","fetchData","getDocs","collection","db","querySnapshot","newNotes","forEach","doc","push","sort","firstNote","secondNote","localeCompare","console","log","filterNotes","Object","values","join","toLowerCase","includes","length","noteList","sortedNotes","previousSortType","query"],"sourceRoot":""}